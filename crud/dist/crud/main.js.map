{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  baseurl = \"http://127.0.0.1:8000\";\n  httpHeaders = new HttpHeaders({'Content-Type': 'application/json'})\n\n  constructor(private http: HttpClient) { }\n\n  getAllMovies(): Observable<any>{\n    return this.http.get(this.baseurl + '/movies/',\n    {headers: this.httpHeaders});\n  }\n  getOneMovie(id): Observable<any>{\n    return this.http.get(this.baseurl + '/movies/' + id + '/',\n    {headers: this.httpHeaders});\n  }\n  updateMovies(movie): Observable<any>{\n    const body = {title: movie.title, description: movie.description, year: movie.year };\n    return this.http.put(this.baseurl + '/movies/' + movie.id + '/', body,\n    {headers: this.httpHeaders});\n  }\n  createMovie(movie): Observable<any>{\n    const body = {title: movie.title, description: movie.description, year: movie.year };\n    return this.http.post(this.baseurl + '/movies/', body,\n    {headers: this.httpHeaders});\n  }\n  deleteMovie(id): Observable<any>{\n    return this.http.delete(this.baseurl + '/movies/' + id + '/',\n    {headers: this.httpHeaders});\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<h2>List of Movies</h2>\\n<ul>\\n    <li *ngFor=\\\"let movie of movies\\\">\\n        <h2 (click)=\\\"movieClicked(movie)\\\">{{movie.title}}</h2>\\n    </li>\\n</ul>\\n<hr>\\nTitle <input type=\\\"text\\\" [(ngModel)]=\\\"selectedMovie.title\\\"/><br>\\nDescription <input type=\\\"text\\\" [(ngModel)]=\\\"selectedMovie.description\\\"/><br>\\nYear <input type=\\\"text\\\" [(ngModel)]=\\\"selectedMovie.year\\\"/><br>\\n<button *ngIf=\\\"selectedMovie.id != -1\\\"  (click)=\\\"updateMovie()\\\"> PUT </button>\\n<button (click)=\\\"createMovie()\\\"> POST </button>\\n<button *ngIf=\\\"selectedMovie.id != -1\\\" (click)=\\\"deleteMovie()\\\"> DELETE </button>\"","import { Component } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { SWITCH_ELEMENT_REF_FACTORY__POST_R3__ } from '@angular/core/src/linker/element_ref';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [ApiService]\n})\nexport class AppComponent {\n  movies = [{title: 'test'}];\n  selectedMovie;\n\n  constructor(private api: ApiService) {\n    this.getAllMovies();\n    this.selectedMovie = {id: -1, title: '', description:'', year: 0 }\n  }\n  getAllMovies = () => {\n    this.api.getAllMovies().subscribe(\n      data => {\n          this.movies = data;\n      },\n      error => {\n        console.log(error)\n      }\n    );\n    }\n    movieClicked = (movie) => {\n      this.api.getOneMovie(movie.id).subscribe(\n        data => {\n          this.selectedMovie  = data;\n        },\n        error => {\n          console.log(error)\n        }\n    );\n  }\n  updateMovie = () => {\n    this.api.updateMovies(this.selectedMovie).subscribe(\n      data => {\n        this.getAllMovies();\n      },\n      error => {\n        console.log(error)\n      }\n  );\n  }\n  createMovie = () => {\n    this.api.createMovie(this.selectedMovie).subscribe(\n      data => {\n        this.movies.push(data);\n      },\n      error => {\n        console.log(error)\n      }\n  );\n}\ndeleteMovie = () => {\n  this.api.deleteMovie(this.selectedMovie.id).subscribe(\n    data => {\n      this.getAllMovies();\n    },\n    error => {\n      console.log(error)\n    }\n);\n}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}